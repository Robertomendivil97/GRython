
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftNEleftLTGTleftPLUSMINUSleftTIMESDIVIDErightPARLleftPARRAND ARRAY_FLOAT ARRAY_INT AS ASSIGN BOOL COLON COMMA COMMENT CUBE_FLOAT CUBE_INT DIVIDE DO DOT DWHILE ELSE END ENDDO ENDFOR ENDIF ENDM ENDW EQ FLOAT FOR GT ID IF IN INT LT MAIN MATRIX_FLOAT MATRIX_INT MINUS MODULE NE NUMBER OR PACKAGE PARL PARR PLUS RGOSUB RIN ROUT SQBL SQBR STRING TIMES VAR WHILE newline program : PACKAGE COLON V MAINP P B END MAINP : empty V : V VAR VM AS TIPO\n    | empty VM : ID VM2 VM2 : COMMA ID VM2 VM : ID SQBL NUMBER SQBR VM2 VM2 : COMMA ID SQBL NUMBER SQBR VM2 VM : ID SQBL NUMBER SQBR SQBL NUMBER SQBR VM2 VM2 : COMMA ID SQBL NUMBER SQBR SQBL NUMBER SQBR VM2 VM : ID SQBL  NUMBER SQBR SQBL NUMBER SQBR SQBR SQBL NUMBER SQBR VM2 VM2 : COMMA ID SQBL  NUMBER SQBR SQBL NUMBER SQBR SQBR SQBL NUMBER SQBR VM2VM2 : empty TIPO : FLOAT\n    | INT\n    | ARRAY_INT\n    | ARRAY_FLOAT\n    | MATRIX_INT\n    | MATRIX_FLOAT\n    | CUBE_INT\n    | CUBE_FLOAT\n    | BOOL P : P  AUXPOSP MODULE ID COLON ST ENDM P : empty AUXPOSP : empty B : MAIN PARL PARR ST  ST : S ST\n    | empty S : ROUT PARL SID PARR\n\t| RIN PARL IID PARR\n\t| IF CONDITION COLON ST ENDIF\n\t| IF CONDITION COLON ST ELSE COLON ST ENDIF\n\t| FOR ID IN ID COLON ST ENDFOR\n\t| VMC ASSIGN UPDATE\n\t| WHILE CONDITION COLON ST ENDW\n\t| DO COLON ST DWHILE COLON CONDITION ENDDO\n\t| RGOSUB ID\n\tSID : STRING SID2\n\t| VMC SID2SID2 : PLUS VMC SID2\n\t| PLUS STRING SID2\n\t| emptyIID : VMC IID2IID2 : COMMA VMC  IID2\n\t| emptyCONDITION : CMP COMPARATOR CMPCMP : NUMBER\n\t| IDCOMPARATOR : NE\n\t| GT\n\t| LT\n\t| EQVMC : ID\n\t| ID SQBL CMP SQBR SQBL CMP SQBR\n\t| ID SQBL CMP SQBR SQBL CMP SQBR SQBL CMP SQBRUPDATE : VMC UPDATE\n\t| NUMBER OPERATOR UPDATE\n\t| VMC\n\t| NUMBEROPERATOR : PLUS\n\t| MINUS\n\t| TIMES\n\t| DIVIDE empty :\t'
    
_lr_action_items = {'ARRAY_FLOAT':([13,],[22,]),'CUBE_INT':([13,],[23,]),'GT':([61,63,64,],[-48,80,-47,]),'PLUS':([57,89,90,93,126,127,147,155,],[-53,110,110,115,110,110,-54,-55,]),'DWHILE':([49,52,57,65,68,69,84,91,92,93,106,107,112,122,128,129,144,145,147,150,155,],[-28,-64,-53,-64,-27,-37,101,-34,-58,-59,-30,-29,-56,-35,-57,-31,-36,-33,-54,-32,-55,]),'IN':([66,],[85,]),'DO':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[48,48,48,-53,48,-37,48,-34,-58,-59,48,-30,-29,-56,-35,48,-57,-31,48,-36,-33,-54,-32,-55,]),'VAR':([3,4,5,22,23,24,25,26,27,28,29,30,31,],[-64,6,-4,-17,-20,-22,-3,-16,-14,-21,-15,-19,-18,]),'END':([21,41,46,49,52,57,68,69,91,92,93,106,107,112,122,128,129,144,145,147,150,155,],[36,-64,-26,-28,-64,-53,-27,-37,-34,-58,-59,-30,-29,-56,-35,-57,-31,-36,-33,-54,-32,-55,]),'CUBE_FLOAT':([13,],[28,]),'PARL':([20,51,54,],[35,67,70,]),'RGOSUB':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[53,53,53,-53,53,-37,53,-34,-58,-59,53,-30,-29,-56,-35,53,-57,-31,53,-36,-33,-54,-32,-55,]),'ENDM':([45,49,52,57,60,68,69,91,92,93,106,107,112,122,128,129,144,145,147,150,155,],[-64,-28,-64,-53,77,-27,-37,-34,-58,-59,-30,-29,-56,-35,-57,-31,-36,-33,-54,-32,-55,]),'DIVIDE':([93,],[113,]),'TIMES':([93,],[116,]),'SQBL':([10,32,39,57,58,98,119,133,147,],[16,38,44,73,75,121,131,142,151,]),'STRING':([70,110,],[90,127,]),'ENDW':([49,52,57,68,69,78,91,92,93,99,106,107,112,122,128,129,144,145,147,150,155,],[-28,-64,-53,-27,-37,-64,-34,-58,-59,122,-30,-29,-56,-35,-57,-31,-36,-33,-54,-32,-55,]),'$end':([2,36,],[0,-1,]),'ARRAY_INT':([13,],[26,]),'ROUT':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[54,54,54,-53,54,-37,54,-34,-58,-59,54,-30,-29,-56,-35,54,-57,-31,54,-36,-33,-54,-32,-55,]),'SQBR':([33,42,59,61,64,76,95,96,120,134,141,148,153,],[39,58,76,-48,-47,98,119,120,133,143,147,152,155,]),'AS':([9,10,15,17,32,37,39,43,58,74,76,97,120,132,143,149,152,154,],[13,-64,-5,-13,-64,-6,-64,-7,-64,-8,-64,-9,-64,-10,-64,-11,-64,-12,]),'LT':([61,63,64,],[-48,81,-47,]),'MATRIX_INT':([13,],[31,]),'FOR':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[50,50,50,-53,50,-37,50,-34,-58,-59,50,-30,-29,-56,-35,50,-57,-31,50,-36,-33,-54,-32,-55,]),'MAIN':([3,4,5,7,8,11,12,22,23,24,25,26,27,28,29,30,31,77,],[-64,-64,-4,-2,-64,20,-24,-17,-20,-22,-3,-16,-14,-21,-15,-19,-18,-23,]),'WHILE':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[47,47,47,-53,47,-37,47,-34,-58,-59,47,-30,-29,-56,-35,47,-57,-31,47,-36,-33,-54,-32,-55,]),'NUMBER':([16,38,44,47,56,57,71,73,75,79,80,81,82,83,92,113,114,115,116,117,121,123,131,142,147,151,155,],[33,42,59,64,64,-53,93,64,96,64,-50,-51,-52,-49,93,-63,93,-60,-62,-61,134,64,64,148,-54,64,-55,]),'ENDIF':([49,52,57,68,69,91,92,93,94,106,107,112,118,122,128,129,140,144,145,146,147,150,155,],[-28,-64,-53,-27,-37,-34,-58,-59,-64,-30,-29,-56,129,-35,-57,-31,-64,-36,-33,150,-54,-32,-55,]),'COLON':([1,40,48,61,62,64,72,100,101,102,130,],[3,45,65,-48,78,-47,94,-46,123,124,140,]),'PACKAGE':([0,],[1,]),'ENDFOR':([49,52,57,68,69,91,92,93,106,107,112,122,124,128,129,136,144,145,147,150,155,],[-28,-64,-53,-27,-37,-34,-58,-59,-30,-29,-56,-35,-64,-57,-31,145,-36,-33,-54,-32,-55,]),'BOOL':([13,],[24,]),'EQ':([61,63,64,],[-48,82,-47,]),'MINUS':([93,],[117,]),'FLOAT':([13,],[27,]),'COMMA':([10,32,39,57,58,76,86,120,125,143,147,152,155,],[14,14,14,-53,14,14,103,14,103,14,-54,14,-55,]),'ASSIGN':([55,57,147,155,],[71,-53,-54,-55,]),'IF':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[56,56,56,-53,56,-37,56,-34,-58,-59,56,-30,-29,-56,-35,56,-57,-31,56,-36,-33,-54,-32,-55,]),'ELSE':([49,52,57,68,69,91,92,93,94,106,107,112,118,122,128,129,144,145,147,150,155,],[-28,-64,-53,-27,-37,-34,-58,-59,-64,-30,-29,-56,130,-35,-57,-31,-36,-33,-54,-32,-55,]),'RIN':([41,45,52,57,65,69,78,91,92,93,94,106,107,112,122,124,128,129,140,144,145,147,150,155,],[51,51,51,-53,51,-37,51,-34,-58,-59,51,-30,-29,-56,-35,51,-57,-31,51,-36,-33,-54,-32,-55,]),'PARR':([35,57,86,87,88,89,90,104,105,108,109,111,125,126,127,137,138,139,147,155,],[41,-53,-64,106,107,-64,-64,-43,-45,-39,-42,-38,-64,-64,-64,-44,-40,-41,-54,-55,]),'ENDDO':([61,64,100,135,],[-48,-47,-46,144,]),'NE':([61,63,64,],[-48,83,-47,]),'MODULE':([3,4,5,7,8,11,12,18,19,22,23,24,25,26,27,28,29,30,31,77,],[-64,-64,-4,-2,-64,-64,-24,-25,34,-17,-20,-22,-3,-16,-14,-21,-15,-19,-18,-23,]),'INT':([13,],[29,]),'MATRIX_FLOAT':([13,],[30,]),'ID':([6,14,34,41,45,47,50,52,53,56,57,65,67,69,70,71,73,78,79,80,81,82,83,85,91,92,93,94,103,106,107,110,112,113,114,115,116,117,122,123,124,128,129,131,140,144,145,147,150,151,155,],[10,32,40,57,57,61,66,57,69,61,-53,57,57,-37,57,57,61,57,61,-50,-51,-52,-49,102,-34,57,-59,57,57,-30,-29,57,-56,-63,57,-60,-62,-61,-35,61,57,-57,-31,61,57,-36,-33,-54,-32,61,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ST':([41,45,52,65,78,94,124,140,],[46,60,68,84,99,118,136,146,]),'CONDITION':([47,56,123,],[62,72,135,]),'empty':([3,4,8,10,11,32,39,41,45,52,58,65,76,78,86,89,90,94,120,124,125,126,127,140,143,152,],[5,7,12,17,18,17,17,49,49,49,17,49,17,49,105,109,109,49,17,49,105,109,109,49,17,17,]),'MAINP':([4,],[8,]),'AUXPOSP':([11,],[19,]),'UPDATE':([71,92,114,],[91,112,128,]),'OPERATOR':([93,],[114,]),'IID2':([86,125,],[104,137,]),'B':([11,],[21,]),'P':([8,],[11,]),'SID':([70,],[88,]),'COMPARATOR':([63,],[79,]),'program':([0,],[2,]),'S':([41,45,52,65,78,94,124,140,],[52,52,52,52,52,52,52,52,]),'SID2':([89,90,126,127,],[108,111,138,139,]),'TIPO':([13,],[25,]),'V':([3,],[4,]),'VM':([6,],[9,]),'VM2':([10,32,39,58,76,120,143,152,],[15,37,43,74,97,132,149,154,]),'IID':([67,],[87,]),'VMC':([41,45,52,65,67,70,71,78,92,94,103,110,114,124,140,],[55,55,55,55,86,89,92,55,92,55,125,126,92,55,55,]),'CMP':([47,56,73,79,123,131,151,],[63,63,95,100,63,141,153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PACKAGE COLON V MAINP P B END','program',7,'p_package','GRython.py',27),
  ('MAINP -> empty','MAINP',1,'p_MAINP','GRython.py',31),
  ('V -> V VAR VM AS TIPO','V',5,'p_V','GRython.py',41),
  ('V -> empty','V',1,'p_V','GRython.py',42),
  ('VM -> ID VM2','VM',2,'p_VM','GRython.py',48),
  ('VM2 -> COMMA ID VM2','VM2',3,'p_VM2','GRython.py',55),
  ('VM -> ID SQBL NUMBER SQBR VM2','VM',5,'p_VM_array','GRython.py',64),
  ('VM2 -> COMMA ID SQBL NUMBER SQBR VM2','VM2',6,'p_VM2_array','GRython.py',68),
  ('VM -> ID SQBL NUMBER SQBR SQBL NUMBER SQBR VM2','VM',8,'p_VM_matrix','GRython.py',73),
  ('VM2 -> COMMA ID SQBL NUMBER SQBR SQBL NUMBER SQBR VM2','VM2',9,'p_VM2_matrix','GRython.py',77),
  ('VM -> ID SQBL NUMBER SQBR SQBL NUMBER SQBR SQBR SQBL NUMBER SQBR VM2','VM',12,'p_VM_cube','GRython.py',82),
  ('VM2 -> COMMA ID SQBL NUMBER SQBR SQBL NUMBER SQBR SQBR SQBL NUMBER SQBR VM2','VM2',13,'p_VM2_cube','GRython.py',87),
  ('VM2 -> empty','VM2',1,'p_VM2_empty','GRython.py',92),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','GRython.py',99),
  ('TIPO -> INT','TIPO',1,'p_TIPO','GRython.py',100),
  ('TIPO -> ARRAY_INT','TIPO',1,'p_TIPO','GRython.py',101),
  ('TIPO -> ARRAY_FLOAT','TIPO',1,'p_TIPO','GRython.py',102),
  ('TIPO -> MATRIX_INT','TIPO',1,'p_TIPO','GRython.py',103),
  ('TIPO -> MATRIX_FLOAT','TIPO',1,'p_TIPO','GRython.py',104),
  ('TIPO -> CUBE_INT','TIPO',1,'p_TIPO','GRython.py',105),
  ('TIPO -> CUBE_FLOAT','TIPO',1,'p_TIPO','GRython.py',106),
  ('TIPO -> BOOL','TIPO',1,'p_TIPO','GRython.py',107),
  ('P -> P AUXPOSP MODULE ID COLON ST ENDM','P',7,'p_P','GRython.py',129),
  ('P -> empty','P',1,'p_P_empty','GRython.py',136),
  ('AUXPOSP -> empty','AUXPOSP',1,'p_AUXPOSP','GRython.py',140),
  ('B -> MAIN PARL PARR ST','B',4,'p_B','GRython.py',148),
  ('ST -> S ST','ST',2,'p_ST','GRython.py',152),
  ('ST -> empty','ST',1,'p_ST','GRython.py',153),
  ('S -> ROUT PARL SID PARR','S',4,'p_S','GRython.py',160),
  ('S -> RIN PARL IID PARR','S',4,'p_S','GRython.py',161),
  ('S -> IF CONDITION COLON ST ENDIF','S',5,'p_S','GRython.py',162),
  ('S -> IF CONDITION COLON ST ELSE COLON ST ENDIF','S',8,'p_S','GRython.py',163),
  ('S -> FOR ID IN ID COLON ST ENDFOR','S',7,'p_S','GRython.py',164),
  ('S -> VMC ASSIGN UPDATE','S',3,'p_S','GRython.py',165),
  ('S -> WHILE CONDITION COLON ST ENDW','S',5,'p_S','GRython.py',166),
  ('S -> DO COLON ST DWHILE COLON CONDITION ENDDO','S',7,'p_S','GRython.py',167),
  ('S -> RGOSUB ID','S',2,'p_S','GRython.py',168),
  ('SID -> STRING SID2','SID',2,'p_SID','GRython.py',173),
  ('SID -> VMC SID2','SID',2,'p_SID','GRython.py',174),
  ('SID2 -> PLUS VMC SID2','SID2',3,'p_SID2','GRython.py',176),
  ('SID2 -> PLUS STRING SID2','SID2',3,'p_SID2','GRython.py',177),
  ('SID2 -> empty','SID2',1,'p_SID2','GRython.py',178),
  ('IID -> VMC IID2','IID',2,'p_IID','GRython.py',182),
  ('IID2 -> COMMA VMC IID2','IID2',3,'p_IID2','GRython.py',184),
  ('IID2 -> empty','IID2',1,'p_IID2','GRython.py',185),
  ('CONDITION -> CMP COMPARATOR CMP','CONDITION',3,'p_CONDITION','GRython.py',190),
  ('CMP -> NUMBER','CMP',1,'p_CMP','GRython.py',192),
  ('CMP -> ID','CMP',1,'p_CMP','GRython.py',193),
  ('COMPARATOR -> NE','COMPARATOR',1,'p_COMPARATOR','GRython.py',195),
  ('COMPARATOR -> GT','COMPARATOR',1,'p_COMPARATOR','GRython.py',196),
  ('COMPARATOR -> LT','COMPARATOR',1,'p_COMPARATOR','GRython.py',197),
  ('COMPARATOR -> EQ','COMPARATOR',1,'p_COMPARATOR','GRython.py',198),
  ('VMC -> ID','VMC',1,'p_VMC','GRython.py',203),
  ('VMC -> ID SQBL CMP SQBR SQBL CMP SQBR','VMC',7,'p_VMC','GRython.py',204),
  ('VMC -> ID SQBL CMP SQBR SQBL CMP SQBR SQBL CMP SQBR','VMC',10,'p_VMC','GRython.py',205),
  ('UPDATE -> VMC UPDATE','UPDATE',2,'p_UPDATE','GRython.py',208),
  ('UPDATE -> NUMBER OPERATOR UPDATE','UPDATE',3,'p_UPDATE','GRython.py',209),
  ('UPDATE -> VMC','UPDATE',1,'p_UPDATE','GRython.py',210),
  ('UPDATE -> NUMBER','UPDATE',1,'p_UPDATE','GRython.py',211),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','GRython.py',213),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','GRython.py',214),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','GRython.py',215),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','GRython.py',216),
  ('empty -> <empty>','empty',0,'p_empty','GRython.py',220),
]
